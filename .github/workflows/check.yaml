name: Checking

on:
  pull_request:
    branches: ['**']

jobs:
  check-backend:
    name: Run backend scripts
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    environment: checking-code
    env:
      SERVER_URL: ${{ vars.SERVER_URL }}
      SERVER_PORT: ${{ vars.SERVER_PORT }}
      FRONTEND_URL: ${{ vars.FRONTEND_URL }}
      SESSION_MONGO_USERNAME: ${{ vars.SESSION_MONGO_USERNAME }}
      SESSION_MONGO_PASSWORD: ${{ vars.SESSION_MONGO_PASSWORD }}
      SESSION_MONGO_URL: ${{ vars.SESSION_MONGO_URL }}
      SESSION_MONGO_TTL: ${{ vars.SESSION_MONGO_TTL }}
      SESSION_MONGO_CRYPTO_SECRET: ${{ secrets.SESSION_MONGO_CRYPTO_SECRET }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      DATA_STORAGE_MONGO_URL: ${{ secrets.DATA_STORAGE_MONGO_URL }}
      DATA_STORAGE_MONGO_DB: ${{ vars.DATA_STORAGE_MONGO_DB }}
      ADMIN_USERNAME: ${{ vars.ADMIN_USERNAME }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js for backend
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies for backend
        run: npm ci
        working-directory: ./backend

      - name: Run formatter for backend
        run: npm run format:check
        working-directory: ./backend

      - name: Run linter for backend
        run: npm run lint:check
        working-directory: ./backend

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: '8.0'
          mongodb-username: ${{ vars.SESSION_MONGO_USERNAME }}
          mongodb-password: ${{ vars.SESSION_MONGO_PASSWORD }}
          mongodb-db: ${{ vars.DATA_STORAGE_MONGO_DB }}

      - name: Run unit test for backend
        run: npm run test:unit
        working-directory: ./backend

      - name: Run integration test for backend
        run: npm run test:int
        working-directory: ./backend

      - name: Run build
        run: NODE_ENV=production npm run build
        working-directory: ./backend

  check-frontend:
    name: Run frontend scripts
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    environment: checking-frontend-code

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js for frontend
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies for frontend
        run: npm ci
        working-directory: ./frontend

      - name: Run formatter for frontend
        run: npm run format:check
        working-directory: ./frontend

      - name: Run linter for frontend
        run: npm run lint:check
        working-directory: ./frontend

      - name: Run unit test for frontend
        run: npm run test:unit
        working-directory: ./frontend

      - name: Run build
        run: npm run build
        working-directory: ./frontend
